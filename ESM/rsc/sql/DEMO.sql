-- cleanup
DROP TABLE IF EXISTS APPDATA;
DROP TABLE IF EXISTS ENTRYPOINTS;
DROP TABLE IF EXISTS ENTRYPOINT_COMMENTS;
DROP TABLE IF EXISTS ESM_USERS;
DROP TABLE IF EXISTS LICENSE;
DROP TABLE IF EXISTS SPACES;
DROP TABLE IF EXISTS SPACE_COMMENTS;
DROP TABLE IF EXISTS VESSEL;
DROP TABLE IF EXISTS TABLEIDCOUNTERS;
DROP TABLE IF EXISTS PHOTO_METADATA;
DROP TABLE IF EXISTS SPACE_CHECKLIST_AUDIT;
DROP TABLE IF EXISTS SPACE_CHECKLIST_QUESTIONS;

-- create tables & relations
CREATE TABLE ESM_USERS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`USERNAME` VARCHAR(32) NOT NULL,
	`PASSWORD` VARCHAR(32) NOT NULL,
	`FORENAME` VARCHAR(64) NOT NULL,
	`SURNAME` VARCHAR(64) NOT NULL,
	`RANK` VARCHAR(64),
	`JOB_TITLE` VARCHAR(128),
	`WORK_IDENTIFIER` VARCHAR(64) NOT NULL,
	`ACCESS_LEVEL` TINYINT DEFAULT 1,
	`DOB` DATE,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);

CREATE TABLE VESSEL (
	`NAME` VARCHAR(128) NOT NULL,
	`IMO_NUMBER` VARCHAR(25) NOT NULL,
	`TYPE` VARCHAR(64),
	`OWNER` VARCHAR(128),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	PRIMARY KEY (NAME)
);

CREATE TABLE LICENSE (
	`LICENSEKEY` VARCHAR(20),
	`VERIFIED_DATE` TIMESTAMP
);

CREATE TABLE SPACES (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`VESSEL_NAME` VARCHAR(128) NOT NULL,
	`NAME` VARCHAR(256) NOT NULL,
	`DESCRIPTION` VARCHAR(4000),
	`AUTHOR_ID` INT NOT NULL,
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);

ALTER TABLE SPACES
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPACES
ADD FOREIGN KEY (VESSEL_NAME) 
REFERENCES VESSEL(NAME) ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`NAME` VARCHAR(256) NOT NULL,
	`DESCRIPTION` VARCHAR(4000),
	`AUTHOR_ID` INT NOT NULL,
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINTS
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ENTRYPOINTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE SPACE_COMMENTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT TRUE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE SPACE_COMMENTS
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPACE_COMMENTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE PHOTO_METADATA (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`TITLE` VARCHAR(128) NOT NULL,
	`PATH` VARCHAR(256) NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT TRUE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE PHOTO_METADATA
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PHOTO_METADATA
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINT_COMMENTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`ENTRYPOINT_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT TRUE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINT_COMMENTS
ADD FOREIGN KEY (ENTRYPOINT_ID) 
REFERENCES ENTRYPOINTS(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ENTRYPOINT_COMMENTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE APPDATA (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`KEY` VARCHAR(128) NOT NULL,
	`VALUE` VARCHAR(2000) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE SPACE_CHECKLIST_QUESTIONS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`Q_TEXT` VARCHAR(1000) NOT NULL,
	`Q_HINT` VARCHAR(2000),
	`SEQUENCE`INT NOT NULL,
	PRIMARY KEY (ID)
);

INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('What are the internal dimensions of the space: H, W, L?','Q1 Hint text here',1);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the enclosed space compartmentalised? Describe internal layout','Q2 Hint text here',2);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal obstacles present (baffles, pipes etc)?','Q3 Hint text here',3);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any restrictive crawl through holes? Please state dimensions','Q4 Hint text here',4);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any pipes running through the space that could contain hazardous liquids or gases?','Q5 Hint text here',5);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there electrical cables running through the space?','Q6 Hint text here',6);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal vertical ladders present? Rate the condition of these','Q7 Hint text here',7);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have staging points/landings? Rate the condition of these','Q8 Hint text here',8);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have safety hoops? Rate the condition of these','Q9 Hint text here',9);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have handrails at landing points? Rate the condition of these','Q10 Hint text here',10);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal anchorage points fitted?','Q11 Hint text here',11);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Does the space contain sloped or curved floors?','Q12 Hint text here',12);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is internal lighting fitted into the space?','Q13 Hint text here',13);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any power points present in the space?','Q14 Hint text here',14);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is there potential for communications black spots (steel lined containers?','Q15 Hint text here',15);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Would the enclosed space be able to accommodate a stretcher?','Q16 Hint text here',16);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can someone wearing a BA set move freely within the confined space?','Q17 Hint text here',17);

CREATE TABLE SPACE_CHECKLIST_AUDIT (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`Q1_DIMENSIONS` VARCHAR(60),
	`Q1_COMMENTS` VARCHAR(2000),
	`Q2_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q2_DESC` VARCHAR(2000),
	`Q3_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q3_COMMENTS` VARCHAR(2000),
	`Q4_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q4_DIMENSIONS` VARCHAR(60),
	`Q4_COMMENTS` VARCHAR(2000),
	`Q5_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q5_COMMENTS` VARCHAR(2000),
	`Q6_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q6_COMMENTS` VARCHAR(2000),
	`Q7_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q7_RATING` INT(1),
	`Q7_COMMENTS` VARCHAR(2000),
	`Q8_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q8_RATING` INT(1),
	`Q8_COMMENTS` VARCHAR(2000),
	`Q9_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q9_RATING` INT(1),
	`Q9_COMMENTS` VARCHAR(2000),
	`Q10_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q10_RATING` INT(1),
	`Q10_COMMENTS` VARCHAR(2000),
	`Q11_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q11_COMMENTS` VARCHAR(2000),
	`Q12_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q12_COMMENTS` VARCHAR(2000),
	`Q13_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q13_COMMENTS` VARCHAR(2000),
	`Q14_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q14_COMMENTS` VARCHAR(2000),
	`Q15_CHECKBOX` BOOLEAN DEFAULT FALSE,
	`Q15_COMMENTS` VARCHAR(2000),
	PRIMARY KEY (ID)
);

ALTER TABLE SPACE_CHECKLIST_AUDIT
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;










CREATE TABLE TABLEIDCOUNTERS (
	`TABLENAME` VARCHAR(100),
	COUNTER INT DEFAULT 0,
	SKIP INT DEFAULT 1
);


-- required for entity framework
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('APPDATA', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ESM_USERS', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('PHOTO_METADATA', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACE_CHECKLIST_AUDIT', 0, 1);
-- set these counters to match number of inserts below
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACES', 4, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACE_COMMENTS', 8, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINTS', 6, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINT_COMMENTS', 8, 1);


-- ============================================================================================
-- sample data for development

INSERT INTO VESSEL (NAME,IMO_NUMBER,TYPE,OWNER,CREATED_DATE) VALUES ('HMS Shiptalk','12345678','Freighter','Shiptalk UK',CURRENT_TIMESTAMP());

INSERT INTO ESM_USERS
(USERNAME,PASSWORD,FORENAME,SURNAME,RANK,JOB_TITLE,WORK_IDENTIFIER,ACCESS_LEVEL,DOB,COMMENT,CREATED_DATE,UPDATE_DATE) 
VALUES 
('admin','pass','John','Smith','Captain','System Administrator','ESM001',9, '1980-08-19','Admin user',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ESM_USERS
(USERNAME,PASSWORD,FORENAME,SURNAME,RANK,JOB_TITLE,WORK_IDENTIFIER,ACCESS_LEVEL,DOB,COMMENT,CREATED_DATE,UPDATE_DATE) 
VALUES 
('user','pass','Fred','Bloggs','Rating','Third Engineer','ESM123',1, '1974-02-11','Basic user - comments etc need approval',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ESM_USERS
(USERNAME,PASSWORD,FORENAME,SURNAME,RANK,JOB_TITLE,WORK_IDENTIFIER,ACCESS_LEVEL,DOB,COMMENT,CREATED_DATE,UPDATE_DATE) 
VALUES 
('user2','pass','Jack','Sparrow','Seaman','First Engineer','ESM987',2, '1984-01-01','Basic user level 2 - comments are automatically approved',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());

INSERT INTO SPACES (VESSEL_NAME,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES ((SELECT TOP 1 NAME FROM VESSEL),'Forepeak Tank','The extreme forward lower compartment or tank usually used for trimming or storage in a ship',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO SPACES (VESSEL_NAME,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES ((SELECT TOP 1 NAME FROM VESSEL),'Chain Locker','A forward compartment in the lower part of a ship for stowing the chain cable',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO SPACES (VESSEL_NAME,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES ((SELECT TOP 1 NAME FROM VESSEL),'Ballast Tank','a tank or compartment either at the bottom of a ship or on the sides, which is filled with liquids for stability of the ship',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO SPACES (VESSEL_NAME,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES ((SELECT TOP 1 NAME FROM VESSEL),'Pipe Tunnel','An underground or underwater passage.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());

INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (1,'Forepeak Tank Hatch','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (1,'Forepeak Tank Ladder','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (1,'Forepeak Tank Door','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (2,'Chain Locker Door','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (3,'Ballast Tank Lid','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
INSERT INTO ENTRYPOINTS (SPACE_ID,NAME,DESCRIPTION,AUTHOR_ID,CREATED_DATE,UPDATE_DATE)
VALUES (4,'Pipe Tunnel Hatch','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',1,CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());

INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (1,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (1,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),FALSE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (2,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (2,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),FALSE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (3,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (3,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (4,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO SPACE_COMMENTS(SPACE_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (4,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);

INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (1,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (1,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),FALSE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (2,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (2,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (3,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (3,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (4,1,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),TRUE);
INSERT INTO ENTRYPOINT_COMMENTS(ENTRYPOINT_ID,AUTHOR_ID,COMMENT,CREATED_DATE,UPDATE_DATE,APPROVED) 
VALUES (4,2,'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),FALSE);

