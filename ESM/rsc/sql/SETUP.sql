-- ESM application database setup file
-- rmrdigitalmedia.com 2014

-- cleanup
DROP TABLE IF EXISTS APPDATA;
DROP TABLE IF EXISTS ENTRYPOINTS;
DROP TABLE IF EXISTS ENTRYPOINT_COMMENTS;
DROP TABLE IF EXISTS ESM_USERS;
DROP TABLE IF EXISTS LICENSE;
DROP TABLE IF EXISTS SPACES;
DROP TABLE IF EXISTS SPACE_COMMENTS;
DROP TABLE IF EXISTS VESSEL;
DROP TABLE IF EXISTS TABLEIDCOUNTERS;
DROP TABLE IF EXISTS PHOTO_METADATA;
DROP TABLE IF EXISTS SPACE_CHECKLIST_QUESTIONS;
DROP TABLE IF EXISTS SPACE_CHECKLIST_AUDIT;
DROP TABLE IF EXISTS ENTRYPOINT_CHECKLIST_QUESTIONS;
DROP TABLE IF EXISTS ENTRYPOINT_CHECKLIST_AUDIT;
DROP TABLE IF EXISTS SPACE_CLASSIFICATION_QUESTIONS;
DROP TABLE IF EXISTS SPACE_CLASSIFICATION_AUDIT;
DROP TABLE IF EXISTS ENTRYPOINT_CLASSIFICATION_QUESTIONS;
DROP TABLE IF EXISTS ENTRYPOINT_CLASSIFICATION_AUDIT;


CREATE TABLE TABLEIDCOUNTERS (
	`TABLENAME` VARCHAR(100),
	COUNTER INT DEFAULT 0,
	SKIP INT DEFAULT 1
);

-- create tables & relations
CREATE TABLE ESM_USERS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`USERNAME` VARCHAR(32) NOT NULL,
	`PASSWORD` VARCHAR(32) NOT NULL,
	`FORENAME` VARCHAR(64) NOT NULL,
	`SURNAME` VARCHAR(64) NOT NULL,
	`RANK` VARCHAR(64),
	`JOB_TITLE` VARCHAR(128),
	`WORK_IDENTIFIER` VARCHAR(64) NOT NULL,
	`ACCESS_LEVEL` TINYINT DEFAULT 1,
	`DOB` DATE,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);

CREATE TABLE VESSEL (
	`NAME` VARCHAR(128) NOT NULL,
	`IMO_NUMBER` VARCHAR(25) NOT NULL,
	`TYPE` VARCHAR(64),
	`OWNER` VARCHAR(128),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	PRIMARY KEY (NAME)
);

CREATE TABLE LICENSE (
	`LICENSEKEY` VARCHAR(20),
	`VERIFIED_DATE` TIMESTAMP
);

CREATE TABLE SPACES (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`VESSEL_NAME` VARCHAR(128) NOT NULL,
	`NAME` VARCHAR(256) NOT NULL,
	`DESCRIPTION` VARCHAR(4000),
	`AUTHOR_ID` INT NOT NULL,
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);

ALTER TABLE SPACES
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPACES
ADD FOREIGN KEY (VESSEL_NAME) 
REFERENCES VESSEL(NAME) ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`NAME` VARCHAR(256) NOT NULL,
	`DESCRIPTION` VARCHAR(4000),
	`AUTHOR_ID` INT NOT NULL,
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINTS
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ENTRYPOINTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE SPACE_COMMENTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT FALSE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE SPACE_COMMENTS
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPACE_COMMENTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE PHOTO_METADATA (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`TITLE` VARCHAR(128) NOT NULL,
	`PATH` VARCHAR(256) NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT FALSE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE PHOTO_METADATA
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PHOTO_METADATA
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINT_COMMENTS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`ENTRYPOINT_ID` INT NOT NULL,
	`AUTHOR_ID` INT NOT NULL,
	`COMMENT` VARCHAR(8000),
	`CREATED_DATE` TIMESTAMP NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL,
	`APPROVED` BOOLEAN DEFAULT FALSE,
	`DELETED` BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINT_COMMENTS
ADD FOREIGN KEY (ENTRYPOINT_ID) 
REFERENCES ENTRYPOINTS(ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ENTRYPOINT_COMMENTS
ADD FOREIGN KEY (AUTHOR_ID) 
REFERENCES ESM_USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE APPDATA (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`KEY` VARCHAR(128) NOT NULL,
	`VALUE` VARCHAR(2000) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE SPACE_CHECKLIST_QUESTIONS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`Q_TEXT` VARCHAR(1000) NOT NULL,
	`Q_HINT` VARCHAR(2000),
	`SEQUENCE`INT NOT NULL,
	PRIMARY KEY (ID)
);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('What are the internal dimensions of the space: H, W, L?','Q1 Hint text here',1);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the enclosed space compartmentalised? Describe internal layout','Q2 Hint text here',2);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal obstacles present (baffles, pipes etc)?','Q3 Hint text here',3);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any restrictive crawl through holes? Please state dimensions','Q4 Hint text here',4);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any pipes running through the space that could contain hazardous liquids or gases?','Q5 Hint text here',5);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there electrical cables running through the space?','Q6 Hint text here',6);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal vertical ladders present? Rate the condition of these','Q7 Hint text here',7);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have staging points/landings? Rate the condition of these','Q8 Hint text here',8);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have safety hoops? Rate the condition of these','Q9 Hint text here',9);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do they have handrails at landing points? Rate the condition of these','Q10 Hint text here',10);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are internal anchorage points fitted?','Q11 Hint text here',11);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Does the space contain sloped or curved floors?','Q12 Hint text here',12);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is internal lighting fitted into the space?','Q13 Hint text here',13);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there any power points present in the space?','Q14 Hint text here',14);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is there potential for communications black spots (steel lined containers)?','Q15 Hint text here',15);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Would the enclosed space be able to accommodate a stretcher?','Q16 Hint text here',16);
INSERT INTO SPACE_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can someone wearing a BA set move freely within the confined space?','Q17 Hint text here',17);

CREATE TABLE SPACE_CHECKLIST_AUDIT (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`Q1_DIMS_H` VARCHAR(12),
	`Q1_DIMS_W` VARCHAR(12),
	`Q1_DIMS_L` VARCHAR(12),
	`Q1_COMMENTS` VARCHAR(2000),
	`Q2_BOOLEAN` VARCHAR(1),
	`Q2_DESC` VARCHAR(2000),
	`Q3_BOOLEAN` VARCHAR(1),
	`Q3_COMMENTS` VARCHAR(2000),
	`Q4_BOOLEAN` VARCHAR(1),
	`Q4_DIMS_H` VARCHAR(12),
	`Q4_DIMS_W` VARCHAR(12),
	`Q4_COMMENTS` VARCHAR(2000),
	`Q5_BOOLEAN` VARCHAR(1),
	`Q5_COMMENTS` VARCHAR(2000),
	`Q6_BOOLEAN` VARCHAR(1),
	`Q6_COMMENTS` VARCHAR(2000),
	`Q7_BOOLEAN` VARCHAR(1),
	`Q7_RATING` INT(1) DEFAULT 0,
	`Q7_COMMENTS` VARCHAR(2000),
	`Q8_BOOLEAN` VARCHAR(1),
	`Q8_RATING` INT(1) DEFAULT 0,
	`Q8_COMMENTS` VARCHAR(2000),
	`Q9_BOOLEAN` VARCHAR(1),
	`Q9_RATING` INT(1) DEFAULT 0,
	`Q9_COMMENTS` VARCHAR(2000),
	`Q10_BOOLEAN` VARCHAR(1),
	`Q10_RATING` INT(1) DEFAULT 0,
	`Q10_COMMENTS` VARCHAR(2000),
	`Q11_BOOLEAN` VARCHAR(1),
	`Q11_COMMENTS` VARCHAR(2000),
	`Q12_BOOLEAN` VARCHAR(1),
	`Q12_COMMENTS` VARCHAR(2000),
	`Q13_BOOLEAN` VARCHAR(1),
	`Q13_COMMENTS` VARCHAR(2000),
	`Q14_BOOLEAN` VARCHAR(1),
	`Q14_COMMENTS` VARCHAR(2000),
	`Q15_BOOLEAN` VARCHAR(1),
	`Q15_COMMENTS` VARCHAR(2000),
	`Q16_BOOLEAN` VARCHAR(1),
	`Q16_COMMENTS` VARCHAR(2000),
	`Q17_BOOLEAN` VARCHAR(1),
	`Q17_COMMENTS` VARCHAR(2000),
	PRIMARY KEY (ID)
);
ALTER TABLE SPACE_CHECKLIST_AUDIT
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINT_CHECKLIST_QUESTIONS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`Q_TEXT` VARCHAR(1000) NOT NULL,
	`Q_HINT` VARCHAR(2000),
	`SEQUENCE`INT NOT NULL,
	PRIMARY KEY (ID)
);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the entry point inside or outside?','Q1 Hint text here',1);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the outside space protected against the weather?','Q2 Hint text here',2);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the entry point clearly marked as an Enclosed Space?','Q3 Hint text here',3);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the entry point: Hinged hatch/Door/Manhole?','Q4 Hint text here',4);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('What is the physical size of the entry point (H,W metric)?','Q5 Hint text here',5);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is there anything at the entry point that might interfere with entry?','Q6 Hint text here',6);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is it a vertical or horizontal entry?','Q7 Hint text here',7);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there fixed anchorage points available for winching arrangements?','Q8 Hint text here',8);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can a mobile anchorage point be accommodated?','Q9 Hint text here',9);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can someone enter the space wearing a Breathing Apparatus?','Q10 Hint text here',10);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is there sufficient room to accommodate Entry and Rescue equipment?','Q11 Hint text here',11);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is there a fixed communication point nearby (telephone)?','Q12 Hint text here',12);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Are there known radio black spots around the confined space?','Q13 Hint text here',13);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Is the area around the entry point well lit?','Q14 Hint text here',14);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can portable Ventilation Machinery be accommodated?','Q15 Hint text here',15);
INSERT INTO ENTRYPOINT_CHECKLIST_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Does your company SMS state that the entry point be zoned off to prevent unauthorised access?','Q16 Hint text here',16);

CREATE TABLE ENTRYPOINT_CHECKLIST_AUDIT (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`ENTRYPOINT_ID` INT NOT NULL,
	`Q1_VALUE` VARCHAR(12),
	`Q1_COMMENTS` VARCHAR(2000),
	`Q2_BOOLEAN` VARCHAR(1),
	`Q2_COMMENTS` VARCHAR(2000),
	`Q3_BOOLEAN` VARCHAR(1),
	`Q3_COMMENTS` VARCHAR(2000),
	`Q4_VALUE` VARCHAR(12),
	`Q4_COMMENTS` VARCHAR(2000),
	`Q5_DIMS_H` VARCHAR(12),
	`Q5_DIMS_W` VARCHAR(12),
	`Q5_COMMENTS` VARCHAR(2000),
	`Q6_BOOLEAN` VARCHAR(1),
	`Q6_COMMENTS` VARCHAR(2000),
	`Q7_VALUE` VARCHAR(12),
	`Q7_COMMENTS` VARCHAR(2000),
	`Q8_BOOLEAN` VARCHAR(1),
	`Q8_COMMENTS` VARCHAR(2000),
	`Q9_BOOLEAN` VARCHAR(1),
	`Q9_COMMENTS` VARCHAR(2000),
	`Q10_BOOLEAN` VARCHAR(1),
	`Q10_COMMENTS` VARCHAR(2000),
	`Q11_BOOLEAN` VARCHAR(1),
	`Q11_COMMENTS` VARCHAR(2000),
	`Q12_BOOLEAN` VARCHAR(1),
	`Q12_COMMENTS` VARCHAR(2000),
	`Q13_BOOLEAN` VARCHAR(1),
	`Q13_COMMENTS` VARCHAR(2000),
	`Q14_BOOLEAN` VARCHAR(1),
	`Q14_COMMENTS` VARCHAR(2000),
	`Q15_BOOLEAN` VARCHAR(1),
	`Q15_COMMENTS` VARCHAR(2000),
	`Q16_BOOLEAN` VARCHAR(1),
	`Q16_COMMENTS` VARCHAR(2000),
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINT_CHECKLIST_AUDIT
ADD FOREIGN KEY (ENTRYPOINT_ID) 
REFERENCES ENTRYPOINTS(ID) ON DELETE CASCADE ON UPDATE CASCADE;
	

CREATE TABLE SPACE_CLASSIFICATION_QUESTIONS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`Q_TEXT` VARCHAR(1000) NOT NULL,
	`Q_HINT` VARCHAR(2000),
	`SEQUENCE`INT NOT NULL,
	PRIMARY KEY (ID)
);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do height and/or width restrictions within the space make movement: Very difficult, Quite difficult, Not difficult?','Q1 Hint text here',1);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do Internal obstacles (pipes etc) or restrictive crawl ways (lightening holes) within the space make movement: Very difficult, Quite difficult, Not difficult?','Q2 Hint text here',2);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Where internal ladders and stairways are present can a winch be rigged and operated: No, Yes with difficulty, Yes without difficulty?','Q3 Hint text here',3);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('When using radio communications inside the space please rate the signal strength and reception: 1 (poor) to 5 (excellent)','Q4 Hint text here',4);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Would someone wearing a full Breathing Apparatus find operating in the enclosed space: Very difficult, Quite difficult, Not difficult?','Q5 Hint text here',5);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Would a casualty be transported through and removed from the space with: Extreme difficulty, Some difficulty, No difficulty?','Q6 Hint text here',6);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can the contents of the space change? (e.g. cargo hold or store room)?','Q7 Hint text here',7);
INSERT INTO SPACE_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Can the condition of the materials in this space change (e.g. rust)?','Q8 Hint text here',8);

CREATE TABLE SPACE_CLASSIFICATION_AUDIT (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`SPACE_ID` INT NOT NULL,
	`Q1_VALUE` INT(1) DEFAULT 0,
	`Q1_COMMENTS` VARCHAR(2000),
	`Q2_VALUE` INT(1) DEFAULT 0,
	`Q2_COMMENTS` VARCHAR(2000),
	`Q3_VALUE` INT(1) DEFAULT 0,
	`Q3_COMMENTS` VARCHAR(2000),
	`Q4_VALUE` INT(1) DEFAULT 0,
	`Q4_COMMENTS` VARCHAR(2000),
	`Q5_VALUE` INT(1) DEFAULT 0,
	`Q5_COMMENTS` VARCHAR(2000),
	`Q6_VALUE` INT(1) DEFAULT 0,
	`Q6_COMMENTS` VARCHAR(2000),
	`Q7_BOOLEAN` VARCHAR(1),
	`Q7_COMMENTS` VARCHAR(2000),
	`Q8_BOOLEAN` VARCHAR(1),
	`Q8_COMMENTS` VARCHAR(2000),
	PRIMARY KEY (ID)
);
ALTER TABLE SPACE_CLASSIFICATION_AUDIT
ADD FOREIGN KEY (SPACE_ID) 
REFERENCES SPACES(ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE ENTRYPOINT_CLASSIFICATION_QUESTIONS (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`Q_TEXT` VARCHAR(1000) NOT NULL,
	`Q_HINT` VARCHAR(2000),
	`SEQUENCE`INT NOT NULL,
	PRIMARY KEY (ID)
);
INSERT INTO ENTRYPOINT_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do the physical dimensions and shape of the entry point make entering the enclosed space: Very difficult, Quite difficult, Not difficult?','Q1 Hint text here',1);
INSERT INTO ENTRYPOINT_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Relating to vertical entries, can a winch be rigged and operated: No, Yes with difficulty, Yes without difficulty','Q2 Hint text here',2);
INSERT INTO ENTRYPOINT_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Do the physical dimensions and shape of the entry point make entering the enclosed space: Very difficult, Quite difficult, Not difficult?','Q3 Hint text here',3);
INSERT INTO ENTRYPOINT_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('In relation to casualty evacuation from the space. is there sufficient room for a stretcher to be able to be lifted vertically or removed horizontally from the space?','Q4 Hint text here',4);
INSERT INTO ENTRYPOINT_CLASSIFICATION_QUESTIONS (Q_TEXT,Q_HINT,SEQUENCE) VALUES ('Would someone wearing a full Breathing Apparatus find entering the enclosed space via the entry point: Very difficult, Quite difficult, Not difficult?','Q5 Hint text here',5);

CREATE TABLE ENTRYPOINT_CLASSIFICATION_AUDIT (
	`ID` INT AUTO_INCREMENT NOT NULL,
	`ENTRYPOINT_ID` INT NOT NULL,
	`Q1_VALUE` INT(1) DEFAULT 0,
	`Q1_COMMENTS` VARCHAR(2000),
	`Q2_VALUE` INT(1) DEFAULT 0,
	`Q2_COMMENTS` VARCHAR(2000),
	`Q3_VALUE` INT(1) DEFAULT 0,
	`Q3_COMMENTS` VARCHAR(2000),
	`Q4_BOOLEAN` VARCHAR(1),
	`Q4_COMMENTS` VARCHAR(2000),
	`Q5_VALUE` INT(1) DEFAULT 0,
	`Q5_COMMENTS` VARCHAR(2000),
	PRIMARY KEY (ID)
);
ALTER TABLE ENTRYPOINT_CLASSIFICATION_AUDIT
ADD FOREIGN KEY (ENTRYPOINT_ID) 
REFERENCES ENTRYPOINTS(ID) ON DELETE CASCADE ON UPDATE CASCADE;

-- required for entity framework
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('APPDATA', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('PHOTO_METADATA', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACE_CHECKLIST_AUDIT', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACE_CLASSIFICATION_AUDIT', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINT_CHECKLIST_AUDIT', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINT_CLASSIFICATION_AUDIT', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ESM_USERS', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACES', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('SPACE_COMMENTS', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINTS', 0, 1);
INSERT INTO TABLEIDCOUNTERS (TABLENAME, COUNTER, SKIP) VALUES ('ENTRYPOINT_COMMENTS', 0, 1);


